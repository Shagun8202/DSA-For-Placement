#include <iostream>

using namespace std;
class Nqueue{
    private:  
      int n;
      int k;
      int *arr;
      int *next;
      int *front;
      int *rear;
      int freespot;
    public:
     Nqueue(int n , int k){
         arr = new int[n];
         next = new int[n];
         for(int i =0 ; i< n;i++){
             next[i] = i+1;
         }
         next[n-1] = -1;
         front = new int[k];
         for(int i =0;i< k;i++){
             front[i]= -1;
         }
          rear = new int[k];
         for(int i =0;i< k;i++){
             rear[i]= -1;
         }
         freespot = 0;
     }
     void enqueue(int data, int qn){
         if(freespot == -1){
             cout<<"Queue is Full"<<endl;
             return ;
         }
         int index = freespot;
         freespot = next[index];
         if(front[qn-1] == -1){
             front[qn-1] = index;
             
         }
         else{
             next[rear[qn-1]] = index;                
         }
         rear[qn-1] = index;
         next[index] =-1;
         arr[index]=data;
     }
     int deque(int qn){
         if(front[qn-1] == -1){
             cout<<"Queue is Empty"<<endl;
             return -1;
         }
         int index = front[qn-1];
         front[qn-1] = next[index];
         next[index] = freespot;
         freespot = index;
         return arr[index];
     }
    
};

int main()
{
  Nqueue q(10, 3);
    q.enqueue(10, 1);
    q.enqueue(15,1);
    q.enqueue(20, 2);
    q.enqueue(25,1);
      cout << q.deque(1) << endl;
    cout << q.deque(2) << endl;
    cout << q.deque(1) << endl;
    cout << q.deque(1) << endl;

    return 0;
}
